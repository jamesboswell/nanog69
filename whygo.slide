#Go for Network Ops
Why Go?
NANOG 69 Washington, DC
21:00 8 Feb 2017
Tags: golang, nanog

James Boswell
Principal Engineer, Charter Communications
jim@jimboswell.net
@jimb on gophers slack
https://invite.slack.golangbridge.org/

http://talks.godoc.org/github.com/jamesboswell/nanog69/whygo.slide
Thank you!

* what this is not....
Not here to bash Python   .... I ‚ù§Ô∏è Python
Not a tutorial
Not a comprehensive review, just my experiences
Not a plug for Google .... (psst...Google ping me ;-)
.image talks.png

Follow along here:
.link http://talks.godoc.org/github.com/jamesboswell/nanog69/whygo.slide

* So why did I start in Go?


Problems with Python

I wanted to write Python 3, but....

- Community is split Python 2 vs Python 3
- 2.7 still supported for 3 more years (officially*) and then ???
- many modules not ported from 2 to 3
- module compatiblity....ok so virtual env everything

Also challenges with scaling code concurrently

_"Hard"_ to do things concurrently
Multiprocessing package works... until it doesn't

A former colleague told me to learn Go...we need Go people here...

*CHALLENGE* *ACCEPTED*


* Hello world in Go

#.code x.go /^func main/,/^}/ HLfmt
.play x.go
.image run.png

* Why Go?
.image gopherbw.png _ 300

* Unicode support with no fuss
.play for.go
Go is fully UTF-8 compliant!

    Hello, world!
    ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ ‡∏Ñ‡∏£‡∏±‡∏ö, world!
    ‰Ω†Â•Ω, world!
    üòÄ, world!

* Type Safety
Sample Python code
.play badinteger.py

  $ python2 badinteger.py                                                                                                                                                                            130 ‚Üµ
  (16, <type 'int'>)
  ('42', <type 'str'>)  ## number should be an integer, right?

Can you avoid this in Python? Yes to some extent, but easy to overwrite variables.

In Go an integer is always an integer, unless explicitly converted.
.play integer.go /^func main/,/^}/

* Dynamic Typing fun...

_Dynamic_ compilation can result in errors that exist in code, but are not detected
.code junk.py
You will not catch this until *junk()* is called

  Traceback (most recent call last):
    File "junk.py", line 7, in <module>
      junk()
  junk()
  NameError: global name 'afdfaf' is not defined
.image pkg.png

* Concurrency
.image gophercomplex6.jpg
* A non concurrent example
  // URLs with mock load times for Go Playground
  var langs = []Lang{
  	Lang{name: "Go", url: "http://golang.org", loadtime: parse("86.900303ms")},
  	Lang{name: "Python", url: "http://python.org", loadtime: parse("207.981306ms")},
  	Lang{name: "Perl", url: "https://www.perl.org/", loadtime: parse("376.4593ms")}}

.code geturl.go /^func mockhttpGet/,/^}/
.play geturl.go /^func main/,/^}/
Total time = total time of all page "loads" summed
_serial_ _operations_


* A concurrent example
Communicate with channels

.code congeturl.go /^func mockhttpGet/,/^}/
.play congeturl.go /START OMIT/,/END OMIT/
_concurrent_ _operations_ - each mockhttpGet is independent
Total time = page "load" time of last Get to complete

(Everything here is standard lib! [batteries included*])

* What can you do with Go?

This presentation is done with Go [present]
GoBGP

- integrate a BGP daemon with another application

Custom packet analyzer (gopacket)

- capture packets, and do _something_ with them
SNMP

- gosnmp
NETCONF

- go-netconf, go-junos

gRPC

- *streaming* *telemetry!!*

* SNMP example

        // setup our session
        gosnmp.Default.Target = 10.1.2.3
        gosnmp.Default.Community = "shhhsecret"
        // connect
        err := gosnmp.Default.Connect()
        // handle a failure
        if err != nil {
                fmt.Printf("Connect err: %v\n", err)
                os.Exit(1)
        }
        defer gosnmp.Default.Conn.Close()

        // performa BulkWalk and send to PrintValue func
        err = gosnmp.Default.BulkWalk(oid, poller.PrintValue)
        if err != nil {
                fmt.Printf("Walk Error: %v\n", err)
                os.Exit(1)
        }


* Who uses Go?

- Docker.io
- Uber
- Cloudflare
- Soundcloud
- Google (of course)

Apps

- Prometheus
- Grafana
- InfluxDB
- *Docker*
and many more...

* Community
.link https://invite.slack.golangbridge.org  Gophers Slack
.link https://reddit.com/r/golang

.link https://groups.google.com/forum/#!forum/golang-nuts golang-nuts on Google Groups

*Learn* *Go* at
.link https://tour.golang.org
